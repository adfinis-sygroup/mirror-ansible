#!/bin/bash
# usage:    This script is used to mirror a CentOS package repository.
#
# last edit: {{ template_run_date }} ansible

# uncomment to enable bash debugging
#set -x

log="{{ centos_mirror_log_path }}/{{ centos_mirror_script_log }}"
timeformat="{{ centos_mirror_script_log_timeformat }}"
source="{{ centos_mirror_script_source }}"
target="{{ centos_mirror_base_path }}"
lastupdate_url="{{ centos_mirror_script_lastupdate_url }}"
bwlimit="{{ centos_mirror_script_bwlimit }}"
tmppath="{{ centos_mirror_script_tmppath }}"
statsfile="{{ mirror_base_path }}/centos.json"

lock="/tmp/sync_centos_mirror.lck"
rsyncexitcode="-1"

function writestatistics() {
    local syncsize="$(du -h "${target}" | tail -1 | cut -f1)"
    local synctime="$(date "${timeformat}")"

    echo "{" > "${statsfile}"
    echo "\"size\": \"${syncsize}\"," >> "${statsfile}"
    echo "\"time\": \"${synctime}\"," >> "${statsfile}"
    echo "\"status\": \"${rsyncexitcode}\"" >> "${statsfile}"
    echo "}" >> "${statsfile}"
}

function log-message() {
    # usage: log <quit> <"message"> [exitcode]
    # example: log-message 1 "Mirror is already up to date!" 0

    local quit="$1"
    local message="$2"

    echo "[$(date "${timeformat}")] ${message}" >> "${log}"
    echo "---------------------------------------------------------------" >> "${log}"

    if [ "${quit}" = 1 ]; then
        local exitcode="$3"
        writestatistics
        exit ${exitcode}
    fi
}

# create lock or exit if already locked in order to prevent multiple syncs
exec 9>"${lock}"
flock -n 9 || log-message 1 "CentOS mirror rsync job is already running!" 1

# exit if there weren't any changes
if diff -b <(curl -s "${lastupdate_url}") "${target}/TIME" >/dev/null; then
    log-message 1 "Mirror is already up to date!" 0
fi

log-message 0 "Started CentOS mirror rsync job."

# start to rsync the mirror
rsync --verbose --log-file="${log}" --no-motd --human-readable --recursive \
    --hard-links --links --safe-links --times --perms \
    --delete-after --delay-updates --temp-dir="${tmppath}" \
    --bwlimit="${bwlimit}" --timeout=120 --contimeout=60 \
    "${source}" \
    "${target}"
rsyncexitcode="$?"

if [ "${rsyncexitcode}" = "0" ]; then
    log-message 1 "Finished CentOS mirror rsync job." ${rsyncexitcode} # = 0
else
    log-message 1 "Rsync had an error: ${rsyncexitcode}" ${rsyncexitcode} # >= 1
fi
